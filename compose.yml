version: "3.9"

name: mart_user  # Project name in lowercase and without hyphens

services:
  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile.dev
    depends_on:
      - postgres_db
      - broker
    ports:
      - "8000:8000"  # Expose container port 8000 to host port 8000
    networks:
      - my_api_net
    volumes:
      - ./user_service:/code  
  product_service:
    build:
      context: ./product_service
      dockerfile: Dockerfile.dev
    depends_on:
      - postgres_db
      - broker
    ports:
      - "8001:8001"  # Expose container port 8000 to host port 8000
    networks:
      - my_api_net
    volumes:
      - ./product_service:/code 

  postgres_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: PostgresCont  # Consistent container naming
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: mydatabase
    ports:
      - "5480:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - my_api_net

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
    networks:
      - my_api_net

  kafka_ui:
    image: provectuslabs/kafka-ui
    container_name: kafka_ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local Kafka Cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "broker:19092"
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker
    networks:
      - my_api_net

volumes:
  postgres_db:
    driver: local

networks:
  my_api_net:
    driver: bridge
